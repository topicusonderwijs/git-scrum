#!/bin/bash

set -e

git sync-tasks

if [ "" == "$1" ]; then
	echo "Specify a task name to merge with testing or --continue to continue merging"
	exit 1
fi

changes=`git status --porcelain | wc -l`
if [ $changes -gt 0 ]; then
	echo "Stash or commit your changes first"
	exit 1
fi

pretestfile="$(git rev-parse --git-dir)/PRETEST_HEAD"
taskfile="$(git rev-parse --git-dir)/TASK_NAME"
if [ "--continue" != "$1" ]; then
	git rev-parse --abbrev-ref HEAD > $pretestfile

	task=$1
	if [[ $task =~ ^task-.* ]]; then
		task=${task:5}
	fi
	echo $task > $taskfile

	echo Merging "'"task-$task"'" for testing

	git checkout testing
	if ! git merge --no-ff --no-edit -m "Mark task-$task for testing" task-$task
	then
		echo " - Fix the merge conflicts"
		echo " - run 'git add -A' or 'git add <file>'"
		echo " - run 'git commit'"
		echo " - run 'git test-task --continue'"
		exit 1
	fi
else
	task=`cat $taskfile`
fi

oldbranch=`cat $pretestfile`
rm $taskfile
rm $pretestfile
remote=$(git config "branch.master.remote")
git push $remote testing
git checkout $oldbranch
