#!/bin/bash

set -e
source "${0%[\\/]*}"/_git-common.sh


curtask=$1
test_env=$2
if [ "" == "$2" ]; then
        curtask=$(git rev-parse --abbrev-ref HEAD)

        if [ "master" == $curtask ]; then
                echo "Specify a task name to test"
                exit 1
        fi
	test_env=$1
fi

if [ "" == "$test_env" ]; then
       	echo "Specify an environment (number) to test on"
        exit 1
fi


git task-sync

remote=$(git config "branch.master.remote")
task=$curtask
if [[ $task == task-* ]]; then
	task=${task:5}
fi

stat=`git task-status $task`
behindmaster=`git rev-list "$remote/task-$task..$remote/master" --no-merges | wc -l`

if [ "$stat" != "busy" ]; then
	echo "Task $task is not busy: $stat"
	exit 1
fi

if [ "$behindmaster" -gt "0" ]; then
	echo "Task $task is $behindmaster commit behind master, run git task-update $task first"
	exit 1
fi

git push --force $remote task-$task:env-$test_env
